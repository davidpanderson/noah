Sports data analysis

1) NBA player analysis

Goal: use play-by-play data to rate players.

Method: Model each player with offensive/defensive coefficients.
Break games up into "segments" where same 10 players are on the court.
Use least-squares fitting to find coefficients.

Files:
nba_download.py
	download schedule file and entire season of game data from nba.com.
	Currently set for 2017/18.
nba_analyze.py
	the error function and gradient
nba2.py
	main program:
	- parse game data files
	- divide into segments
	- do optimization
	- show results

To do:
- fix problem of extra characters in game files
- run with entire season of data
- get 2018/19 data

file names: nba/year/ratings_t1_t2_t3  or ratings_all
nba = NBA(2017)
nba.rating_files()
    shows ratings files for that year
nba.show_teams()
   show team names and numbers
nba.load_ratings(filename)
nba.get_ratings([1,2,3])
   compute ratings for given teams, writes file
nba.plot()
nba.rankings()
   show top offense, defense, combined

ideas:
have "min playing time"
omit segments where some player has less than min time

specify player traded mid-season
compute ratings as if pre-trade and post-trade where different players



2) Score predict

Goal: make it usable without editing source code

commands:

sp_status()
	show sport and year
sp_use(sport, year)
	sport = 'nfl', 'ncaaf'
	year = 2019 etc.
	subsequent commands apply to that sport/year
sp_calc()
	calculate and save ratings
sp_teams()
	show list of teams (w/ numbers)
sp_predict(t1, t2)
	predict score of game between t1 and t2
sp_top(which)
	which = 'off', 'def', 'all'
	show top teams ordered by specified quantity
sp_plot()
	draw scatter plot
